name: Deploy Para Ambiente de Producao AWS

on:
  pull_request:
    branches: [ main ]
    types: [closed]

jobs:
  deploy-production:
    # SÓ executa se for PR mergeado de stage para main
    if: |
      github.event.pull_request.merged == true && 
      github.event.pull_request.head.ref == 'stage' &&
      github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    environment: app-form-web
    
    steps:
      - name: Debug
        run: |
          echo "=== PRODUCTION DEPLOY ==="
          echo "Head: ${{ github.event.pull_request.head.ref }}"
          echo "Base: ${{ github.event.pull_request.base.ref }}"
          
      - name: Checkout do código
        uses: actions/checkout@v4
        
      - name: Configurar AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Login no Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY }}
          
      - name: Build da imagem
        run: |
          docker build -t ${{ secrets.AWS_ECR_REPOSITORY }} ./src
          
      - name: Tag da imagem para o ECR
        run: |
          docker tag ${{ secrets.AWS_ECR_REPOSITORY }}:latest ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY }}:latest
          
      - name: Enviar a Imagem para o Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY }}:latest
          
      - name: Deploy na Instância EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          envs: AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_REGION
          script: |
            sudo docker login --username AWS --password $(aws ecr get-login-password --region $AWS_REGION) ${{ secrets.AWS_ECR_REGISTRY }}
            sudo docker pull ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY }}:latest
            sudo docker stop ${{ secrets.AWS_ECR_REPOSITORY }} || true
            sudo docker rm ${{ secrets.AWS_ECR_REPOSITORY }} || true
            sudo docker run -d --restart=always --name ${{ secrets.AWS_ECR_REPOSITORY }} -p 8080:80 ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY }}:latest
